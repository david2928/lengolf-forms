#!/usr/bin/env python3
"""
Convert time entries data to SQL format for Supabase
"""

# Your data (paste the data here)
data = """Employee	Clock In	Clock Out
May	01/05/2025 9:26	01/05/2025 15:21
Net	01/05/2025 14:56	01/05/2025 20:01
Dolly	01/05/2025 15:57	01/05/2025 19:34
May	01/05/2025 16:03	01/05/2025 18:01
Dolly	01/05/2025 20:01	01/05/2025 23:30
Net	01/05/2025 20:41	01/05/2025 23:30
May	02/05/2025 9:38	02/05/2025 15:12
Dolly	02/05/2025 14:38	02/05/2025 20:43
May	02/05/2025 15:54	02/05/2025 18:02
Net	02/05/2025 15:55	02/05/2025 19:05
Net	02/05/2025 19:57	02/05/2025 23:00
Dolly	02/05/2025 21:19	02/05/2025 23:03
Dolly	03/05/2025 9:33	03/05/2025 15:21
Winnie	03/05/2025 13:55	03/05/2025 19:01
Net	03/05/2025 14:50	03/05/2025 18:06
Dolly	03/05/2025 16:07	03/05/2025 18:13
Net	03/05/2025 18:42	03/05/2025 23:09
Dolly	04/05/2025 9:36	04/05/2025 15:00
Winnie	04/05/2025 10:55	04/05/2025 13:19
Winnie	04/05/2025 14:05	04/05/2025 19:00
May	04/05/2025 14:51	04/05/2025 16:36
Dolly	04/05/2025 15:28	04/05/2025 18:08
May	04/05/2025 17:20	04/05/2025 23:02
Net	05/05/2025 9:24	05/05/2025 14:41
May	05/05/2025 14:40	05/05/2025 16:47
Net	05/05/2025 15:29	05/05/2025 18:00
May	05/05/2025 17:32	05/05/2025 22:21
Dolly	06/05/2025 9:37	06/05/2025 15:39
Net	06/05/2025 14:47	06/05/2025 18:27
May	06/05/2025 14:54	06/05/2025 17:07
Dolly	06/05/2025 16:45	06/05/2025 18:07
May	06/05/2025 17:30	06/05/2025 22:51
Net	06/05/2025 19:15	06/05/2025 22:51
Net	07/05/2025 9:27	07/05/2025 15:26
Dolly	07/05/2025 14:56	07/05/2025 18:29
May	07/05/2025 15:53	07/05/2025 16:55
Net	07/05/2025 16:09	07/05/2025 18:16
May	07/05/2025 17:35	07/05/2025 23:16
Dolly	07/05/2025 19:00	07/05/2025 23:16
May	08/05/2025 9:32	08/05/2025 15:31
Net	08/05/2025 14:51	08/05/2025 18:51
Dolly	08/05/2025 15:43	08/05/2025 17:24
May	08/05/2025 16:11	08/05/2025 18:00
Dolly	08/05/2025 18:05	08/05/2025 22:58
Net	08/05/2025 19:35	08/05/2025 22:58
May	09/05/2025 9:40	09/05/2025 15:29
Dolly	09/05/2025 14:45	09/05/2025 19:06
Net	09/05/2025 15:51	09/05/2025 19:42
May	09/05/2025 16:11	09/05/2025 18:01
Dolly	09/05/2025 19:35	09/05/2025 23:01
Net	09/05/2025 20:31	09/05/2025 23:02
Dolly	10/05/2025 9:39	10/05/2025 14:17
Winnie	10/05/2025 10:56	10/05/2025 13:31
Winnie	10/05/2025 14:05	10/05/2025 19:01
Net	10/05/2025 14:55	10/05/2025 18:15
Dolly	10/05/2025 15:02	10/05/2025 18:05
Net	10/05/2025 18:54	10/05/2025 23:17
Dolly	11/05/2025 9:34	11/05/2025 15:05
Winnie	11/05/2025 10:54	11/05/2025 14:09
Winnie	11/05/2025 14:50	11/05/2025 19:05
May	11/05/2025 14:52	11/05/2025 16:44
Dolly	11/05/2025 15:32	11/05/2025 18:11
May	11/05/2025 17:24	11/05/2025 22:41
Net	12/05/2025 8:34	12/05/2025 15:07
May	12/05/2025 14:52	12/05/2025 16:10
Net	12/05/2025 15:56	12/05/2025 17:08
May	12/05/2025 16:38	12/05/2025 23:07
Dolly	13/05/2025 09:41	13/05/2025 15:39
Net	13/05/2025 14:40	13/05/2025 18:50
May	13/05/2025 14:52	13/05/2025 17:03
Dolly	13/05/2025 16:20	13/05/2025 18:06
May	13/05/2025 17:36	13/05/2025 23:10
Net	13/05/2025 19:33	13/05/2025 23:10
Net	14/05/2025 09:25	14/05/2025 15:07
Dolly	14/05/2025 14:47	14/05/2025 17:20
Net	14/05/2025 15:44	14/05/2025 18:03
May	14/05/2025 15:48	14/05/2025 18:12
Dolly	14/05/2025 18:02	14/05/2025 23:19
May	14/05/2025 18:46	14/05/2025 23:14
May	15/05/2025 09:35	15/05/2025 15:18
Net	15/05/2025 14:52	15/05/2025 19:08
Dolly	15/05/2025 15:43	15/05/2025 20:26
May	15/05/2025 15:51	15/05/2025 18:01
Net	15/05/2025 19:34	15/05/2025 22:49
Dolly	15/05/2025 21:01	15/05/2025 22:50
May	16/05/2025 09:44	16/05/2025 15:35
Dolly	16/05/2025 14:52	16/05/2025 17:32
Net	16/05/2025 15:54	16/05/2025 20:24
May	16/05/2025 16:21	16/05/2025 18:02
Dolly	16/05/2025 18:09	16/05/2025 23:12
Net	16/05/2025 21:09	16/05/2025 23:11
Dolly	17/05/2025 09:33	17/05/2025 15:25
Winnie	17/05/2025 10:55	17/05/2025 14:25
Net	17/05/2025 14:52	17/05/2025 17:40
Winnie	17/05/2025 15:00	17/05/2025 19:01
Dolly	17/05/2025 16:08	17/05/2025 18:02
Net	17/05/2025 18:17	17/05/2025 23:21
Dolly	18/05/2025 09:33	18/05/2025 15:19
Winnie	18/05/2025 10:53	18/05/2025 14:13
May	18/05/2025 14:58	18/05/2025 16:55
Winnie	18/05/2025 15:04	18/05/2025 19:00
Dolly	18/05/2025 16:00	18/05/2025 18:01
May	18/05/2025 17:39	18/05/2025 23:00
Net	19/05/2025 09:21	19/05/2025 14:53
May	19/05/2025 14:53	19/05/2025 16:55
Net	19/05/2025 15:44	19/05/2025 21:12
May	19/05/2025 17:32	19/05/2025 22:44
Dolly	20/05/2025 09:33	20/05/2025 15:52
Net	20/05/2025 14:52	20/05/2025 18:15
May	20/05/2025 14:52	20/05/2025 17:00
Dolly	20/05/2025 16:21	20/05/2025 18:33
May	20/05/2025 17:40	20/05/2025 22:50
Net	20/05/2025 18:52	20/05/2025 22:52
Net	21/05/2025 09:38	21/05/2025 15:03
Dolly	21/05/2025 14:46	21/05/2025 18:20
Net	21/05/2025 15:47	21/05/2025 18:02
May	21/05/2025 15:53	21/05/2025 17:20
May	21/05/2025 17:59	21/05/2025 22:51
Dolly	21/05/2025 18:45	21/05/2025 22:52
May	22/05/2025 09:39	22/05/2025 15:25
Net	22/05/2025 14:42	22/05/2025 19:34
Dolly	22/05/2025 15:44	22/05/2025 19:10
May	22/05/2025 16:13	22/05/2025 18:03
Dolly	22/05/2025 19:31	22/05/2025 22:51
Net	22/05/2025 20:16	22/05/2025 22:51
May	23/05/2025 09:43	23/05/2025 14:35
Dolly	23/05/2025 14:35	23/05/2025 18:14
May	23/05/2025 15:18	23/05/2025 18:00
Net	23/05/2025 15:41	23/05/2025 19:09
Dolly	23/05/2025 18:44	23/05/2025 23:17
Net	23/05/2025 19:48	23/05/2025 23:14
Dolly	24/05/2025 09:33	24/05/2025 16:03
Net	24/05/2025 14:45	24/05/2025 16:56
Dolly	24/05/2025 16:31	24/05/2025 18:15
Net	24/05/2025 17:32	24/05/2025 23:01
Dolly	25/05/2025 09:33	25/05/2025 15:32
Winnie	25/05/2025 10:53	25/05/2025 12:52
Winnie	25/05/2025 13:44	25/05/2025 19:00
May	25/05/2025 14:51	25/05/2025 16:48
Dolly	25/05/2025 16:00	25/05/2025 18:05
May	25/05/2025 17:23	25/05/2025 22:46
Net	26/05/2025 09:45	26/05/2025 14:51
May	26/05/2025 14:50	26/05/2025 16:42
Net	26/05/2025 15:47	26/05/2025 20:59
May	26/05/2025 17:21	26/05/2025 23:08
Dolly	27/05/2025 09:36	27/05/2025 15:08
May	27/05/2025 14:49	27/05/2025 17:18
Net	27/05/2025 14:49	27/05/2025 19:21
Dolly	27/05/2025 15:43	27/05/2025 18:34
May	27/05/2025 17:55	27/05/2025 23:12
Net	27/05/2025 20:00	27/05/2025 23:13
Net	28/05/2025 09:24	28/05/2025 14:44
Dolly	28/05/2025 14:42	28/05/2025 17:02
Net	28/05/2025 15:28	28/05/2025 18:07
May	28/05/2025 15:50	28/05/2025 17:47
Dolly	28/05/2025 17:41	28/05/2025 23:10
May	28/05/2025 18:23	28/05/2025 23:10
May	29/05/2025 09:55	29/05/2025 15:06
Net	29/05/2025 14:54	29/05/2025 20:18
Dolly	29/05/2025 15:34	29/05/2025 18:42
May	29/05/2025 15:44	29/05/2025 18:01
Dolly	29/05/2025 19:04	29/05/2025 23:28
Net	29/05/2025 20:57	29/05/2025 23:28
May	30/05/2025 09:44	30/05/2025 15:00
Dolly	30/05/2025 14:45	30/05/2025 18:18
May	30/05/2025 15:41	30/05/2025 18:02
Net	30/05/2025 15:45	30/05/2025 19:15
Dolly	30/05/2025 18:40	30/05/2025 23:15
Net	30/05/2025 20:02	30/05/2025 23:19
Dolly	31/05/2025 09:33	31/05/2025 13:00
Winnie	31/05/2025 10:56	31/05/2025 12:32
Winnie	31/05/2025 13:00	31/05/2025 19:16
Dolly	31/05/2025 13:31	31/05/2025 21:05
Net	31/05/2025 14:40	31/05/2025 18:04
Net	31/05/2025 18:34	31/05/2025 23:25"""

def convert_to_sql():
    lines = data.strip().split('\n')[1:]  # Skip header
    
    # Staff name mapping (you'll need to update these with actual IDs)
    staff_mapping = {
        'May': 'MAY_STAFF_ID',
        'Net': 'NET_STAFF_ID', 
        'Dolly': 'DOLLY_STAFF_ID',
        'Winnie': 'WINNIE_STAFF_ID'
    }
    
    sql_entries = []
    
    for line in lines:
        parts = line.split('\t')
        if len(parts) >= 3:
            employee = parts[0].strip()
            clock_in = parts[1].strip()
            clock_out = parts[2].strip()
            
            # Convert date format from DD/MM/YYYY H:MM to YYYY-MM-DD HH:MM:SS
            def convert_datetime(dt_str):
                date_part, time_part = dt_str.split(' ')
                day, month, year = date_part.split('/')
                if ':' in time_part:
                    hour, minute = time_part.split(':')
                else:
                    hour, minute = time_part, '00'
                return f"{year}-{month.zfill(2)}-{day.zfill(2)} {hour.zfill(2)}:{minute.zfill(2)}:00+07:00"
            
            staff_id = staff_mapping.get(employee, 'UNKNOWN')
            
            # Clock in entry
            sql_entries.append(f"({staff_id}, 'clock_in', '{convert_datetime(clock_in)}', false, '{{\"source\": \"manual_upload\"}}')")
            
            # Clock out entry  
            sql_entries.append(f"({staff_id}, 'clock_out', '{convert_datetime(clock_out)}', false, '{{\"source\": \"manual_upload\"}}')")
    
    return sql_entries

# Generate SQL
sql_entries = convert_to_sql()

# Write to file
with open('complete_time_entries.sql', 'w') as f:
    f.write("""-- LENGOLF Complete Time Entries Upload
-- Step 1: Get staff IDs first
SELECT id, staff_name FROM backoffice.staff 
WHERE staff_name ILIKE ANY(ARRAY['%may%', '%net%', '%dolly%', '%winnie%']) 
AND is_active = true
ORDER BY staff_name;

-- Step 2: Update the staff IDs below and run the INSERT
-- Replace these with actual IDs from Step 1:
-- MAY_STAFF_ID = [actual May ID]
-- NET_STAFF_ID = [actual Net ID]  
-- DOLLY_STAFF_ID = [actual Dolly ID]
-- WINNIE_STAFF_ID = [actual Winnie ID]

INSERT INTO backoffice.time_entries (staff_id, action, timestamp, photo_captured, device_info)
VALUES 
""")
    
    for i, entry in enumerate(sql_entries):
        if i < len(sql_entries) - 1:
            f.write(entry + ",\n")
        else:
            f.write(entry + ";\n")

print("âœ… Generated complete_time_entries.sql with all entries!")
print("ðŸ“Š Total entries:", len(sql_entries))
print("ðŸŽ¯ Run this Python script to generate the SQL file, then use it in Supabase!") 